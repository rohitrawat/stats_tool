function varargout = stats_tool(varargin)
% STATS_TOOL Sensitivity, specificity, ROC curves, and AUC computation tool.
% This tool accepts processing results files generated by NuClass, and performs 
% sensitivity, specificity, ROC curve, and AUC computation. Run NuClass in 
% processing mode to produce the processing result files for each cross-validation
% data set, and save them under different names. Click the Add files button to add
% these files to the list of files. The remove and clear buttons work as 
% advertised. 
% ROC plot options: To display the ROC plot for each validation file, select 
% "Each plot in new window". To only display the averaged plot, select the other 
% option. The averaged plot will be diplayed in both the cases. To save the 
% displayed plots as JPEG files in the current directory, check the box 
% underneath. The JPEG files will have the same names as the processing 
% results files, but with a JPEG extension. The averaged plot is saved as 
% "averaged_ROC_plot.jpg". The positive class label should be set to 1 or 2, 
% depending on what label has been used for the positive class. The negative class
% (or the controls class) is automatically assigned the other label.
% 
% Author: Rohit Rawat (rohit.rawat@mavs.uta.edu)
% Date: 06/26/2012
% NuClass software: http://www-ee.uta.edu/eeweb/ip/
% Image Processing and Neural Networks Lab, UT Arlington

% Edit the above text to modify the response to help stats_tool

% Last Modified by GUIDE v2.5 27-Jun-2012 12:02:31

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @stats_tool_OpeningFcn, ...
                   'gui_OutputFcn',  @stats_tool_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before stats_tool is made visible.
function stats_tool_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to stats_tool (see VARARGIN)

% Choose default command line output for stats_tool
handles.output = hObject;

handles.file_list_text = [];
handles.myFileNames = [];

set(handles.run_button, 'Enable', 'off');
set(handles.all_radio, 'Value', 1);
set(handles.saveplots_checkbox, 'Value', 0);
set(handles.results_editbox, 'String', 'Select some files..');
set(handles.file_list, 'String', 'Select some files..');
    
% Update handles structure
guidata(hObject, handles);

% figure;
% plot([1 2 3 2 1]);

% UIWAIT makes stats_tool wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = stats_tool_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on selection change in file_list.
function file_list_Callback(hObject, eventdata, handles)
% hObject    handle to file_list (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns file_list contents as cell array
%        contents{get(hObject,'Value')} returns selected item from file_list


% --- Executes during object creation, after setting all properties.
function file_list_CreateFcn(hObject, eventdata, handles)
% hObject    handle to file_list (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in add_button.
function add_button_Callback(hObject, eventdata, handles)
% hObject    handle to add_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get handles structure
handles = guidata(hObject);

% Get the files
[FileName, PathName, FilterIndex] = uigetfile('*.txt','Select the MLP processing result files', 'MultiSelect', 'on');

ok = 0;
if(ischar(FileName))
    handles.file_list_text = [handles.file_list_text; FileName];
    handles.myFileNames = [handles.myFileNames; strcat(PathName, FileName)];
    set(handles.run_button, 'Enable', 'on');
    ok = 1;
elseif iscell(FileName)
    for i=1:size(FileName,2)
        FileName(i)
        handles.file_list_text = [handles.file_list_text; FileName(i)];
        handles.myFileNames = [handles.myFileNames; strcat(PathName, FileName(i))];
        set(handles.run_button, 'Enable', 'on');
        ok = 1;
    end
end
    
if(ok)
    set(handles.file_list, 'String', handles.file_list_text);
end

% Update handles structure
guidata(hObject, handles);

% --- Executes on button press in remove_button.
function remove_button_Callback(hObject, eventdata, handles)
% hObject    handle to remove_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get handles structure
handles = guidata(hObject);

selected_index = get(handles.file_list, 'Value')
handles.file_list_text = [handles.file_list_text(1:selected_index-1,:); handles.file_list_text(selected_index+1:end,:)];
handles.myFileNames = [handles.myFileNames(1:selected_index-1,:); handles.myFileNames(selected_index+1:end,:)];

isempty(handles.file_list_text )
if(isempty(handles.file_list_text ))
    set(handles.file_list, 'String', 'Select some file(s)..');
    set(handles.run_button, 'Enable', 'off');
else
    set(handles.file_list, 'String', handles.file_list_text);
end

if(size(handles.file_list_text,1) < selected_index)
    set(handles.file_list, 'Value', max(size(handles.file_list_text,1),1));
end

% Update handles structure
guidata(hObject, handles);

% --- Executes on button press in run_button.
function run_button_Callback(hObject, eventdata, handles)
% hObject    handle to run_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get handles structure
handles = guidata(hObject);

% Processing
new_window_each_plot = get(handles.all_radio, 'Value');
save_plots_as_jpegs = get(handles.saveplots_checkbox, 'Value');
[AUC_curves, sens, spec, AUC] = run_analysis(handles.myFileNames, new_window_each_plot, save_plots_as_jpegs, 2);
plot_roc_new(AUC_curves, save_plots_as_jpegs);

% Update results
text = [];
for i=1:size(handles.myFileNames,1)
    str = sprintf('Filename: %s \nSensitivity: %f \nSpecificity: %f \nAUC: %f \n\n', char(handles.myFileNames(i,:)), sens(i), spec(i), AUC(i))
    text = [text, str];
end
set(handles.results_editbox, 'String', text);

% Update handles structure
guidata(hObject, handles);

function results_editbox_Callback(hObject, eventdata, handles)
% hObject    handle to results_editbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of results_editbox as text
%        str2double(get(hObject,'String')) returns contents of results_editbox as a double


% --- Executes during object creation, after setting all properties.
function results_editbox_CreateFcn(hObject, eventdata, handles)
% hObject    handle to results_editbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in clear_button.
function clear_button_Callback(hObject, eventdata, handles)
% hObject    handle to clear_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get handles structure
handles = guidata(hObject);

handles.file_list_text = [];
handles.myFileNames = [];
set(handles.run_button, 'Enable', 'off');

% Update handles structure
guidata(hObject, handles);

set(handles.file_list, 'String', 'Select some file(s)..');


% --- Executes on button press in saveplots_checkbox.
function saveplots_checkbox_Callback(hObject, eventdata, handles)
% hObject    handle to saveplots_checkbox (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of saveplots_checkbox


% --- Executes on button press in help_button.
function help_button_Callback(hObject, eventdata, handles)
% hObject    handle to help_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(handles.results_editbox, 'String', ...
['Help:', char(10)...
'This tool accepts processing results files generated by NuClass, and ',...
'performs sensitivity, specificity, ROC curve, and AUC computation. ',...
'Run NuClass in processing mode to produce the processing result files for ',...
'each cross-validation data set, and save them under different names. ',...
'Click the Add files button to add these files to the list of files. The ',...
'remove and clear buttons work as advertised. ',...
'ROC plot options: To display the ROC plot for each validation file, ',...
'select "Each plot in new window". To only display the averaged plot, ',...
'select the other option. The averaged plot will be diplayed in both the ',...
'cases. To save the displayed plots as JPEG files in the current ',...
'directory, check the box underneath. The JPEG files will ',...
'have the same names as the processing results files, but with a JPEG extension. ',...
'The averaged plot is saved as "averaged_ROC_plot.jpg". ',...
'The positive class label should be set to 1 or 2, depending on what label ',...
'has been used for the positive class. The negative class (or the ',...
'controls class) is automatically assigned the other label.', char(10),...
'Author: Rohit Rawat (rohit.rawat@mavs.uta.edu)', char(10),...
'NuClass software: http://www-ee.uta.edu/eeweb/ip/', char(10)]);
